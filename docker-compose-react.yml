version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: drone-soccer-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: drone_soccer
      MYSQL_USER: dronesoccer
      MYSQL_PASSWORD: dronesoccer123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - drone-soccer-network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --init-connect='SET NAMES utf8mb4;'

  # Node.js Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: drone-soccer-backend
    restart: always
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: drone_soccer
      DB_USER: dronesoccer
      DB_PASSWORD: dronesoccer123
      JWT_SECRET: your-super-secret-jwt-key-here
      PORT: 5000
    ports:
      - "8001:5000"
    depends_on:
      - db
    networks:
      - drone-soccer-network
    volumes:
      - ./server:/app
      - /app/node_modules

  # React Frontend (Admin)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: drone-soccer-frontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - drone-soccer-network
    environment:
      REACT_APP_API_URL: http://localhost:8001/api

  # React Frontend (Public Client)
  client-public:
    build:
      context: ./client-public
      dockerfile: Dockerfile
    container_name: drone-soccer-client-public
    restart: always
    ports:
      - "3001:80"
    depends_on:
      - backend
    networks:
      - drone-soccer-network
    environment:
      REACT_APP_API_URL: http://localhost:3001/api

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: drone-soccer-nginx
    restart: always
    ports:
      - "8888:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - client-public
      - backend
    networks:
      - drone-soccer-network

volumes:
  mysql_data:

networks:
  drone-soccer-network:
    driver: bridge